(program
  (const (= GRID_SIZE 16))

  (type alias Position ((: x Int) (: y Int)))
  (type alias Particle ((: position Position)))

  (external (: click Click))
  
  (: particles (List Particle))
  (= particles (init (antGen 4) next (if (&& (occurred click) noFoodRemaining) 
                                      then (push! (prev particles) (foodGen 4)) 
                                      else (map nextParticle particles))))
  
  (: manhattanDistance (-> Particle Particle Int))
  (= manhattanDistance (fn (particle1 particle2) 
                            (+ 
                              (abs
                                (-
                                  (.. (.. particle1 position) x)
                                  (.. (.. particle2 position) x)
                                )
                              ) 
                              (abs
                                (-
                                  (.. (.. particle1 position) y)
                                  (.. (.. particle2 position) y)
                                )
                              )
                            )
                          ))
  
  (: createAnt (-> Position Particle))
  (= createAnt (fn (initPosition) 
                   (Particle initPosition "gray" True)))
  
  (: createFood (-> Position Particle))
  (= createFood (fn (initPosition)
                    (Particle initPosition "red" True)))
  
  (: antGen (-> Int (List Particle)))
  (= antGen (fn (count) 
                (let ((= xCoords (uniformChoice (range 0 (- GRID_SIZE 1)) count))
                      (= yCoords (uniformChoice (range 0 (- GRID_SIZE 1)) count))
                      (= positions (concatMap ))
                      (= ants (map createAnt positions))) 
                     ants))
  
)