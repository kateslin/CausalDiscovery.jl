(program
  (const (= GRID_SIZE 16))

  (type alias (= Position ((: x Int) (: y Int))))
  (type alias (= Particle ((: position Position))))

  (external (: click Click))

  (: particles (List Particle))
  (= particles (initnext ([]) (if (occurred click) 
                               then (:: (prev particles) (particleGen 1 1))) 
                               else (map nextParticle particles)))
  
  (= nparticles (length particles))
  
  (: isFree (-> Position Bool))
  (= isFree (fn (position) 
                (length (-> (particle) (== (. particle position) position)))))

  (: isWithinBounds (-> Position Bool))
  (= isWithinBounds (fn (position) 
                        (&& (>= (. position x) 0) (&& (< (. position x) GRID_SIZE) (&& (>= (. position y) 0) (< (. position y) GRID_SIZE))))))
  
  (: adjacentPositions (-> Position List))
  (= adjacentPositions (fn (position) 
                           (let ((= x (. position x)) 
                                 (= y (. position y)) 
                                 (= positions (filter (isWithinBounds (Position (x + 1) (y)) (Position (x - 1) (y)) (Position (x) (y + 1)) (Position (x) (y - 1))))))
                            in (positions))))

  (: nextParticle (-> Particle Particle))
  (= nextParticle (fn (particle) 
                      (let (filter (isfree (adjacentPositions (. particle position)))) 
                       in (case freePositions
                                (=> [] particle)
                                (=> _ (Particle (uniformChoice freePositions)))))))

  (: particleGen (-> Position Particle))
  (= particleGen (fn (initPosition) (Particle initPosition)))
)